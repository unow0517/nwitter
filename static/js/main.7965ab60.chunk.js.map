{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","measurementId","REACT_APP_MEASUREMENT_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","newDisplayName","setNewDisplayName","updateProfile","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","textAlign","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7965ab60.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name,value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        } else if ( name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    return(\r\n      <>\r\n        <form onSubmit={onSubmit} className ='container'>\r\n        <input\r\n          name='email' \r\n          type='email' \r\n          placeholder='E-mail' \r\n          required \r\n          value={email}\r\n          onChange ={onChange}\r\n          className = \"authInput\"/>    \r\n        <input \r\n          name='password'\r\n          type='password' \r\n          placeholder='Password' \r\n          required\r\n          value={password}\r\n          onChange ={onChange}\r\n          className = \"authInput\"/>       \r\n        <input \r\n          type='submit' \r\n          value = {newAccount? \"Create Account\":\"Log In\"}/>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount}  className=\"authSwitch\">\r\n            {newAccount ? \"sign in\" : \"Create Account\"}\r\n        </span>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\n\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name}} = event;\r\n            let provider;\r\n            if(name===\"google\"){\r\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            } else if(name === \"github\"){\r\n                provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            }\r\n            await authService.signInWithPopup(provider);\r\n        };\r\n\r\n  return(\r\n    <div className=\"authContainer\">\r\n    <FontAwesomeIcon\r\n      icon={faTwitter}\r\n      color={\"#04AAFF\"}\r\n      size=\"3x\"\r\n      style={{ marginBottom: 30 }}\r\n    />\r\n        <AuthForm/>\r\n            <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n            </button>\r\n        </div>\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React,{useState} from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"are you sure?\")\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = ()=> setEditing((prev) =>!prev)\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className =\"nweet\">\r\n            { editing ? (\r\n              <>\r\n                  <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input \r\n                      type='text'\r\n                      placeholder='Edit your nweet'\r\n                      value={newNweet}\r\n                      required\r\n                      autoFocus\r\n                      onChange={onChange}\r\n                      className=\"formInput\"\r\n                    />\r\n                    <input type='submit' value='update Nweet' className=\"formBtn\" />/>\r\n                  </form>\r\n                  <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                  </span>\r\n              </>\r\n               ):(\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                   <div class=\"nweet__actions\">\r\n                   <span onClick={onDeleteClick}>\r\n                     <FontAwesomeIcon icon={faTrash} />\r\n                   </span>\r\n                   <span onClick={toggleEditing}>\r\n                     <FontAwesomeIcon icon={faPencilAlt} />\r\n                   </span>\r\n                 </div>\r\n                  )}\r\n                </>    \r\n                )\r\n          \r\n            }\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Nweet;","import { dbService, storageService } from 'fbase';\r\nimport React , {useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    \r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;       \r\n        setNweet(value);\r\n    };\r\n    \r\n    const onFileChange = (event) => {\r\n        const {target: {files},} =event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input \r\n             id=\"attach-file\"\r\n             type=\"file\"\r\n             accept=\"image/*\"\r\n             onChange={onFileChange}\r\n             style={{\r\n               opacity: 0,\r\n             }}/>\r\n        {attachment && \r\n            <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import React, {useEffect, useState} from 'react';\r\nimport {dbService} from 'fbase';\r\nimport Nweet from 'components/Nweet'\r\nimport NweetFactory from 'components/NweetFactory'\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [nweets,setNweets] = useState([]);\r\n    \r\n    // const getNweets = async () => {\r\n    //     const dbNweets = await dbService.collection(\"nweets\").get();\r\n    //     dbNweets.forEach((document) =>{\r\n    //         const nweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id                \r\n    //         }\r\n    //         setNweets((prev) =>[nweetObject, ...prev]); //...means spread all the contents out.\r\n    //     });\r\n    // }\r\n\r\n\r\n    useEffect(()=>{\r\n        // getNweets();\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) =>{\r\n            const nweetArray = snapshot.docs.map((doc) =>({\r\n                id:doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setNweets(nweetArray);\r\n        })\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n           \r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                        key= {nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => \r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n                >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n                </Link>    \r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\nexport default Navigation;","import { authService, dbService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    // const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    \r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        // history.push(\"/\")\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const{ target:{value}}=event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n          <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n              onChange = {onChange}\r\n              type='text'\r\n              autoFocus\r\n              placeholder = 'Display name'\r\n              value={newDisplayName}\r\n              className=\"formInput\"\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n            />\r\n          </form>\r\n          <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n          </span>\r\n        </div>\r\n        \r\n        );\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\"\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/navigation\";\r\nimport Profile from \"routes/Profile\"\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn , userObj}) => {\r\n\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                      <div\r\n                      style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                        <Redirect from = \"*\" to =\"/\" />\r\n                    </div>\r\n                ):(\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth/>\r\n                        </Route>\r\n                        <Redirect from = \"*\" to =\"/\" />\r\n                    </>\r\n                )}  \r\n            </Switch>\r\n        </Router>\r\n    )\r\n} \r\n\r\nexport default AppRouter;","import React, { useState, useEffect} from 'react';\r\nimport AppRouter from \"components/Router\";\r\nimport {authService} from 'fbase';\r\n\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n \r\n  \r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user){\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args)\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true)\r\n    });\r\n  }, [])\r\n  \r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj( {\r\n      displayName:user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args)});\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {init ? (\r\n      <AppRouter \r\n        refreshUser = {refreshUser} \r\n        isLoggedIn ={Boolean(userObj)} \r\n        userObj={userObj}\r\n      />) : \"Initializing...\"}\r\n      <footer style ={{textAlign:\"center\", margin: '30px 0'}}>\r\n        &copy; YunHo made this for practice. Thanks to Nomad Coder. {new Date().getFullYear()}\r\n      </footer>    \r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport \"./style.css\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}